{"version":3,"sources":["components/Header/Header.js","components/Card/Card.js","components/Main/Main.js","components/Footer/Footer.js","components/PopupWithForm/PopupWithForm.js","components/ImagePopup/ImagePopup.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logoPath","alt","Card","props","handleClick","onCardClick","card","this","link","onClick","name","likes","length","React","Component","Main","onEditAvatar","userAvatar","userName","onEditProfile","userDescription","onAddPlace","cards","map","tempCard","key","_id","noValidate","Footer","PopupWithForm","state","value","inputValue","isOpen","onClose","title","children","ImagePopup","api","baseUrl","token","_token","_baseUrl","fetch","headers","authorization","then","res","ok","json","Promise","reject","status","userInfo","method","body","JSON","stringify","avatar","cardID","methodLike","App","useState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","setUserName","setUserDescription","setUserAvatar","setCards","selectedCard","setSelectedCard","closeAllPopups","useEffect","getCardsArr","cardsArr","catch","err","console","log","getUserInfo","userInfoFromServer","about","defaultValue","required","type","minLength","maxLength","id","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.f72ca231.chunk.js","sourcesContent":["import React from 'react';\nimport logoPath from './../../images/logo.svg';\n\nfunction Header() {\n  return(\n    <header className=\"header\">\n      <img src={logoPath} className=\"header__logo\" alt=\"logo\" />\n    </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick = () => {\n    this.props.onCardClick(this.props.card);\n  } \n\n  render() {\n    return (\n      <li className=\"place\">\n        <img className=\"place__image\" src={this.props.card.link} onClick={this.handleClick}/>\n        <button className=\"place__delete-btn\"></button>\n        <div className=\"place__description\">\n          <p className=\"place__title\">{this.props.card.name}</p>\n          <div className=\"place__like\">\n            <button className=\"place__like-btn\"></button>\n            <h3 className=\"place__like-count\">{this.props.card.likes.length}</h3>\n          </div>\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default Card;","import React from 'react';\nimport Card from './../Card/Card.js';\n\n/*\nfunction handleEditAvatarClick() {\n  document.querySelector('.popup_avatar').classList.add('popup_opened');\n}\n\nfunction handleEditProfileClick() {\n  document.querySelector('.popup_edit').classList.add('popup_opened');\n}\n\nfunction handleAddPlaceClick() {\n  document.querySelector('.popup_add').classList.add('popup_opened');\n}\n*/\nfunction Main(props) {\n  return(\n    <>\n    <section className=\"profile\">\n      \n      <div className=\"profile__info\">\n        <div className=\"profile__avatar\">\n          <button className=\"profile__avatar-edit\" onClick={props.onEditAvatar}></button>\n          <img className=\"profile__avatar-img\" alt=\"Аватар\" src={props.userAvatar} />\n        </div>\n        <div className=\"profile__description\">\n          <h1 className=\"profile__name\">{props.userName}</h1>\n          <button className=\"profile__edit-btn\" onClick={props.onEditProfile}></button>\n          <p className=\"profile__job\">{props.userDescription}</p>\n        </div>\n      </div>\n      <button className=\"profile__add-btn\" onClick={props.onAddPlace}></button>\n    </section>\n    <ul className=\"places\">\n      {props.cards.map((tempCard) => {\n          return ( \n            <Card \n              key = {tempCard._id}\n              card = {tempCard}\n              onCardClick = {props.onCardClick}\n            /> \n          )\n        })}\n      <div className=\"popup popup_submit\">\n        <button className=\"popup__close-btn\"></button>\n        <form className=\"popup__container popup__container_submit\" noValidate>\n          <p className=\"popup__container-title popup__container-title_submit\">Вы уверены?</p>\n          <button className=\"popup__container-save-btn\">Да</button>\n        </form>\n      </div>\n    </ul>\n    </>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n  return(\n     <footer className=\"footer\">© 2020 Mesto Russia</footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nclass PopupWithForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: props.inputValue }\n  }\n\n  render() {\n    return(\n    <div className={`popup popup_${this.props.name} ${this.props.isOpen && 'popup_opened'}`}>\n        <button className=\"popup__close-btn\" onClick={this.props.onClose}></button>\n        <form className=\"popup__container\" noValidate>\n          <p className=\"popup__container-title\">{this.props.title}</p>\n          {this.props.children}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup(props) {\n  return(\n    <div className={`img-popup ${props.card && 'popup_opened'}`}>\n        <div className=\"img-popup__container\">\n          <button className=\"img-popup__close-btn\" onClick={props.onClose}></button>\n          <img className=\"img-popup__img\" src={props.card.link} />\n          <p className=\"img-popup__title\">{props.card.name}</p>\n        </div>\n    </div>\n    );\n}\n\nexport default ImagePopup;","class Api {\n    constructor(baseUrl, token) {\n        this._token = token;\n        this._baseUrl = baseUrl;\n    }\n\n    getUserInfo() {\n        return fetch(this._baseUrl + '/users/me', {\n            headers: {\n                authorization: this._token\n            }\n            })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                  }\n                return Promise.reject(res.status);\n            })\n    }\n\n    getCardsArr() {\n        return fetch(this._baseUrl + '/cards', {\n            headers: {\n                authorization: this._token\n            }\n            })\n        .then(res => {\n                if (res.ok) {\n                    return res.json()\n                  }\n                return Promise.reject(res.status);\n            })\n    }\n\n    editUserInfo(userInfo) {\n        return fetch(this._baseUrl + '/users/me', {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userInfo)\n            })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                  }\n                return Promise.reject(res.status);\n            })\n    }\n\n    setUserAvatar(avatar) {\n       return fetch(this._baseUrl + '/users/me/avatar', {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(avatar)\n            })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                  }\n                return Promise.reject(res.status);\n            })\n    }\n\n    addNewCard(card) {\n        return fetch(this._baseUrl + '/cards', {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(card)\n            })\n        .then(res => {\n            if (res.ok) {\n              return res.json()\n            }\n            return Promise.reject(res.status);\n        })\n    }\n\n    deleteCard(cardID) {\n        return fetch(this._baseUrl + '/cards/' + cardID, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token\n            }\n            })\n    .then(res => {\n        if (res.ok) {\n            return res.json()\n          }\n        return Promise.reject(res.status);\n    })\n    }\n\n    likeCard(cardID, methodLike) {\n        return fetch(this._baseUrl + '/cards/likes/' + cardID, {\n            method: methodLike,\n            headers: {\n                authorization: this._token\n            }\n            })\n        .then(res => {\n          if (res.ok) {\n              return res.json()\n            }\n          return Promise.reject(res.status);\n        })\n    }\n}\n\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-14', '668dca3d-51ec-4823-a727-cc18d24544ec');\n\nexport {api};","import React from 'react';\nimport Header from './Header/Header.js';\nimport Main from './Main/Main.js'\nimport Footer from './Footer/Footer.js'\nimport PopupWithForm from './PopupWithForm/PopupWithForm.js';\nimport ImagePopup from './ImagePopup/ImagePopup.js';\nimport {api} from './../utils/Api.js';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState();\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = React.useState();\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState();\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n\n//Get initial cards\n  React.useEffect(() => {\n    const getCardsPromise = api.getCardsArr()\n      .then(cardsArr => {\n        setCards(cardsArr);\n        return cardsArr\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [])\n\n//Get user info\n  React.useEffect(() => {\n    const userInfoPromise = api.getUserInfo()\n      .then(userInfoFromServer => {\n        setUserName(userInfoFromServer.name);\n        setUserDescription(userInfoFromServer.about);\n        setUserAvatar(userInfoFromServer.avatar);\n        return userInfoFromServer\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    \n  }, [])\n\n//Open & close popup's function\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    <div className=\"body\">\n      <div className=\"page\">\n        <Header />\n        <Main \n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          userName={userName}\n          userDescription={userDescription}\n          userAvatar={userAvatar}\n          cards={cards}\n          onCardClick = {handleCardClick}\n        />\n        <PopupWithForm \n          name = 'edit' \n          title = 'Редактировать профиль' \n          isOpen = { isEditProfilePopupOpen }\n          onClose = { closeAllPopups } >\n            <div className=\"popup__control\">\n              <input className=\"popup__container-input popup__container-input_type_title\"\n                defaultValue={userName}\n                name=\"title\" \n                required\n                type=\"text\" \n                minLength=\"2\" \n                maxLength=\"20\" />\n              <span className=\"popup__error\"></span>\n            </div>\n            <div className=\"popup__control\">\n              <input className=\"popup__container-input popup__container-input_type_subtitle\"\n                defaultValue={userDescription}\n                name=\"subtitle\" \n                required \n                type=\"text\" \n                minLength=\"2\" \n                maxLength=\"40\" />\n              <span className=\"popup__error\"></span>\n            </div>\n            <button className=\"popup__container-save-btn\">Сохранить</button>\n        </PopupWithForm>\n        <PopupWithForm \n          name = 'add' \n          title = 'Новое место' \n          id = '2' \n          isOpen = { isAddPlacePopupOpen }\n          onClose = { closeAllPopups } >\n          <div className=\"popup__control\">\n              <input className=\"popup__container-input popup__container-input_type_title\" \n                 name=\"title\" \n                 placeholder=\"Название\" \n                 required \n                 type=\"text\" \n                 minLength=\"1\" \n                 maxLength=\"30\" />\n              <span className=\"popup__error\"></span>\n            </div>\n            <div className=\"popup__control\">\n              <input className=\"popup__container-input popup__container-input_type_subtitle\" \n                name=\"subtitle\" \n                placeholder=\"Ссылка на картинку\" \n                required \n                type=\"url\" />\n              <span className=\"popup__error\"></span>\n            </div>\n            <button className=\"popup__container-save-btn\">Создать</button>\n        </PopupWithForm>\n        <PopupWithForm \n          name = 'avatar' \n          title = 'Обновить аватар' \n          id = '3' \n          isOpen = { isEditAvatarPopupOpen }\n          onClose = { closeAllPopups } >\n          <div className=\"popup__control\">\n              <input className=\"popup__container-input popup__container-input_type_subtitle\" \n                name=\"subtitle\" \n                placeholder=\"Ссылка на картинку\" \n                required \n                type=\"url\" />\n              <span className=\"popup__error\"></span>\n            </div>\n            <button className=\"popup__container-save-btn\">Сохранить</button>\n        </PopupWithForm>\n        <ImagePopup\n          card = {selectedCard}\n          onClose = {closeAllPopups}\n        />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";"],"sourceRoot":""}